package com.kiki.target.common.model;
//123 Generated 2018-2-4 2:05:59 by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * Supervision generated by hbm2java
 */
@Entity
@Table(name = "supervision", catalog = "db_target")
public class Supervision implements java.io.Serializable {

	private String id;
	private User userByUserId;
	private User userBySuperintendentId;
	private Date createTime;
	private Date updateTime;
	private boolean enabled;
	private Set<Target> targets = new HashSet<Target>(0);
	private Set<Reviewed> revieweds = new HashSet<Reviewed>(0);
	private Set<Prize> prizes = new HashSet<Prize>(0);
	private Set<Exchange> exchanges = new HashSet<Exchange>(0);

	public Supervision() {
	}

	public Supervision(String id, User userByUserId, User userBySuperintendentId, Date createTime, Date updateTime,
			boolean enabled) {
		this.id = id;
		this.userByUserId = userByUserId;
		this.userBySuperintendentId = userBySuperintendentId;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.enabled = enabled;
	}

	public Supervision(String id, User userByUserId, User userBySuperintendentId, Date createTime, Date updateTime,
			boolean enabled, Set<Target> targets, Set<Reviewed> revieweds, Set<Prize> prizes, Set<Exchange> exchanges) {
		this.id = id;
		this.userByUserId = userByUserId;
		this.userBySuperintendentId = userBySuperintendentId;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.enabled = enabled;
		this.targets = targets;
		this.revieweds = revieweds;
		this.prizes = prizes;
		this.exchanges = exchanges;
	}

	@Id
	@GeneratedValue(generator = "generator")    
	@GenericGenerator(name = "generator", strategy = "uuid")   
	@Column(name = "id", unique = true, nullable = false, length = 36)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUserByUserId() {
		return this.userByUserId;
	}

	public void setUserByUserId(User userByUserId) {
		this.userByUserId = userByUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "superintendent_id", nullable = false)
	public User getUserBySuperintendentId() {
		return this.userBySuperintendentId;
	}

	public void setUserBySuperintendentId(User userBySuperintendentId) {
		this.userBySuperintendentId = userBySuperintendentId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", nullable = false, length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "enabled", nullable = false)
	public boolean isEnabled() {
		return this.enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "supervision")
	public Set<Target> getTargets() {
		return this.targets;
	}

	public void setTargets(Set<Target> targets) {
		this.targets = targets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "supervision")
	public Set<Reviewed> getRevieweds() {
		return this.revieweds;
	}

	public void setRevieweds(Set<Reviewed> revieweds) {
		this.revieweds = revieweds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "supervision")
	public Set<Prize> getPrizes() {
		return this.prizes;
	}

	public void setPrizes(Set<Prize> prizes) {
		this.prizes = prizes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "supervision")
	public Set<Exchange> getExchanges() {
		return this.exchanges;
	}

	public void setExchanges(Set<Exchange> exchanges) {
		this.exchanges = exchanges;
	}

}
